<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="shortcut icon" href="./img/favicon.ico" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.9/css/bootstrap-dialog.css" type="text/css" />

  <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.7.0/fullcalendar.min.css ">
   -->

  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link rel=" stylesheet " href="/font-awesome-4.7.0/css/font-awesome.css " type="text/css " />
  <link rel="stylesheet " href="/font-awesome-4.7.0/css/font-awesome.min.css " type="text/css " />

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.7.0/fullcalendar.print.css" media="print">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.7.0/fullcalendar.css">
  <link rel="stylesheet " href="/css/main.css ">
  <link rel="stylesheet " href="/css/nav-bar.css ">
  <!-- <link rel="stylesheet " href="/css/bg-video.css "> -->
  <link rel="stylesheet " href="/css/cal.css ">
  <title>Tekkojuku-Calendar</title>
</head>

<body class="calendar-body">
  <%- include navbar.ejs %>
    <div class="main-content">


      <% if(false){ %>

        <!-- <div id="cal">
        <div id="sub-cal">

          <div class="row">
            <h2>Class Calendar</h2>
            <div class="btn btn-primary  add-event-btn ">Add Event</div>
          </div>
          <br><br>
          <% for(var i=0; i<calendarData.length; i++) {%>
        <% var calArray=allClasses[i].split("|") %>
          <a href="#" data-userid="<%= calendarData[i]._id%>" data-evdt="<%= calendarData[i].dateOccurrence %>" id="<%= calendarData[i]._id%>" class="event clearfix">

            <%- calArray[0] %>

              <%- calArray[1] %>

                <div class="inst-info">
                  <%= JSON.stringify(calendarData[i]._instructor) %>
                </div>
                <div class="event-type-title"><span class="event_type"><%= calendarData[i].content %></span>&nbsp;-&nbsp;<span class="event_title"><%= JSON.stringify(calendarData[i]._instructor).replace(/(.*username\":\")(\w.*)(",\"em.*)/g,"$2")%></span></div>
          </a>

          <% } %>
  </div>
  </div> -->

        <% } %>

          <div class="calendar">

            <div class="sub-calendar">
              <% if (classDataByID.render) {%>
                <div class="full-cal-event-listener" style="display: none">
                  <a href="#" data-userid="" data-evdt="" id="" class="event ">
                    <div class="event_icon">
                      <div class="event_month Aikido"></div>
                      <div class="event_day"></div>
                    </div>
                    <div class="inst-info"></div>
                    <div class="event-type-title"><span class="event_type"></span>&nbsp;-&nbsp;<span class="event_title"></span></div>
                  </a>
                </div>
                <%} %>
                  <div class="btn btn-primary  add-event-btn " style="display: none">Add Event</div>
            </div>
          </div>
    </div>
    <%- include footer.ejs %>

      <script src="https://code.jquery.com/jquery-3.2.1.min.js " integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin=" anonymous "></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.2/moment.min.js" charset="utf-8"></script>

      <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/js/bootstrap.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.9/js/bootstrap-dialog.js"></script>


      <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.7.0/fullcalendar.js" charset="utf-8"></script>
      <script src="/js/debug.js"></script>
      <script src="/js/global.js "></script>
      <script src="/js/app.js "></script>
      <!-- <script src="/js/cal.js "></script> -->

      <script type="text/javascript">
        $(document).ready(function() {

          let getCurrTime = (myDate) => {
            let time = new Date(myDate);
            let hours = time.getUTCHours() > 12 ? time.getUTCHours() - 12 : time.getUTCHours();
            let am_pm = time.getUTCHours() >= 12 ? "PM" : "AM";
            hours = hours < 10 ? "0" + hours : hours;
            let minutes = time.getUTCMinutes() < 10 ? "0" + time.getUTCMinutes() : time.getUTCMinutes();
            //   let seconds = time.getUTCSeconds() < 10 ? "0" + time.getUTCSeconds() : time.getUTCSeconds();
            time = hours + ":" + minutes + am_pm;
            return time;
          };

          let generateClass = (item) => {
            let monthNames = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            let d = new Date(item.dateOccurrence);
            let dateM = monthNames[d.getMonth()];
            let dateD = d.getDate();
            let dateT = getCurrTime(item.dateOccurrence);
            let currClass = `<div class="event_icon"><div class="event_month ${item.content}">${dateD} ${dateM}</div><div class="event_day">${dateT}</div></div>`;
            // qonsole.debug('generateClasses currClass:', currClass);
            return currClass;
          }

          // page is now ready, initialize the calendar...
          let calOptions = {
            customButtons: {
              addEventBtn: {
                text: 'Add Event',
                click: function() {
                  // alert('clicked the custom button!');
                  $('.add-event-btn').click();
                }
              }
            },
            header: {
              left: 'prev,next today addEventBtn',
              center: 'title',
              right: 'month, agendaWeek, listWeek'
            },
            defaultTimedEventDuration: '01:00:00',
            defaultDate: `${new Date().toISOString().substring(0,10)}`,
            navLinks: true, // can click day/week names to navigate views
            editable: false,
            timezone: 'local',
            events: [<%- fullCalendarEvents %>],
            // height: 'auto',
            eventLimit: true, // for all non-agenda views
            allDaySlot: false,
            businessHours: [ // specify an array instead
              {
                dow: [1, 2, 3, 4, 5, 6, 7], // Monday, Tuesday, Wednesday
                start: '07:00', // 8am
                end: '20:00' // 6pm
              }
            ],
            views: {
              month: {
                eventLimit: 4 // adjust to 6 only for agendaWeek/agendaDay
              },
              agendaWeek: {
                minTime: "07:00:00",
                maxTime: "20:00:00"
              }
            },
            eventAfterRender: function(event, element, view) {

              if (event.title === "Aikido") {
                //event.color = "#"; //
                element.css({
                  'background-color': '#e74c3c',
                  'border-color': '#e74c3c'
                });
              } else if (event.title === "Iaido") {
                //event.color = "#"; //
                element.css({
                  'background-color': '#27ae60',
                  'border-color': '#27ae60'
                });
              } else if (event.title === "Weapons") {
                //event.color = "#"; //
                element.css({
                  'background-color': '#3498db',
                  'border-color': '#3498db'
                });
              }
              $(element).click(e => {
                // console.log(e);
                let currID = e.currentTarget.classList.value.match(/full-cal-event-[a-zA-Z0-9]*/);
                currID = currID[0].replace('full-cal-event-', '');
                // console.log('currID:', currID);
                // getClassByID(currID);

                $.ajax({
                    type: "get",
                    url: `/calendar/${currID}`,
                    headers: {
                      "Accept": "application/json",
                    },
                  })
                  .done((data) => {

                    let eventID = data.classDataByID._id;
                    let instID = data.classDataByID._instructor._id;
                    // console.log('msg: ClassID data', data);
                    // console.log(data.classDataByID.content);
                    // console.log(data.classDataByID._id);
                    // console.log(data.classDataByID._instructor);
                    // console.log(data.classDataByID._instructor.username);
                    // console.log(data.classDataByID.dateOccurrence);

                    BootstrapDialog.show({
                      title: `Event Info: `,
                      message: `<div style="display: block"><div style="float: left">${data.classDataByID.content} Class: <br> ${generateClass(data.classDataByID)}</div><div style="float: right"> Instructor: <br><img src="${data.classDataByID._instructor.img}" width="65" height="90"><br>${data.classDataByID._instructor.username}</div>
                      <div style="clear: both"> Degree: ${data.classDataByID._instructor.degree}<br>  Bio: ${data.classDataByID._instructor.bio}</div></div>`,
                      type: BootstrapDialog.TYPE_PRIMARY,
                      cssClass: 'bs-dialog',
                      buttons: [{
                        label: 'Close',
                        action: function(dialogRef) {
                          dialogRef.close();
                        }
                      }, {
                        label: 'Edit',
                        cssClass: 'btn-primary',
                        action: function(dialogRef) {
                          dialogRef.close();

                          var date = new Date(data.classDataByID.dateOccurrence);
                          date.setMinutes(date.getMinutes() - date.getTimezoneOffset());
                          var dateStr = date.toISOString().substring(0, 10);
                          var timeStr = getConvertTimeTo24(data.classDataByID.dateOccurrence);
                          // console.log('dateStr:', dateStr);
                          // console.log('timeStr:', timeStr);
                          $.ajax({
                              type: "get",
                              url: "/instructors/data",
                              datatype: "json",
                            })
                            .done((data) => {
                              //qonsole.debug('data: Successful', data);
                              let instructorOpts = "";
                              data.forEach(item => {
                                if (item._id === instID) {
                                  // console.log(item._id === instID);
                                  instructorOpts += ` <option value="${item._id}" selected>${item.username}</option>`
                                } else {
                                  // console.log(item._id === instID);
                                  instructorOpts += ` <option value="${item._id}">${item.username}</option>`
                                }

                              })
                              setTimeout(function() {
                                $('select[name="instructors"]').html(instructorOpts)
                                // qonsole.debug('select: ', $('select'));
                              }, 500)
                            });


                          BootstrapDialog.show({
                            title: `Edit Class:`,
                            message: `
                            Select an Instructor:
                            <select name="instructors">
                            </select>

                            Class Type:
                            <div class="btn-group" data-toggle="buttons">
                            <label type="button" class="btn btn-secondary class-content"><input type="radio" name="options" id="Aikido" autocomplete="off" checked>Aikido</label><label type="button" class="btn btn-secondary class-content"><input type="radio" name="options" id="Iaido" autocomplete="off">Iaido</label><label type="button" class="btn btn-secondary class-content"><input type="radio" name="options" id="Weapons" autocomplete="off">Weapons</label></div>

                            Date: <input type=date class="new-class-date" value="${dateStr}">
                            Time: <input type=time min=9:00 max=17:00 step=900 value="${timeStr}"> `,
                            type: BootstrapDialog.TYPE_PRIMARY,
                            cssClass: 'bs-dialog',
                            buttons: [{
                              label: 'Close',
                              action: function(dialogRef) {
                                dialogRef.close();
                              }
                            }, {
                              label: 'Submit',
                              cssClass: 'btn-primary',
                              autospin: true,
                              action: function(dialogRef) {
                                updateClassEventByID(eventID);
                                dialogRef.enableButtons(false);
                                dialogRef.setClosable(false);
                                dialogRef.getModalBody().html('Dialog closes in 5 seconds.');
                                setTimeout(function() {
                                  dialogRef.close();
                                }, 1000);
                              }
                            }]
                          });
                        }
                      }, {
                        label: 'Delete',
                        title: 'Delete Event',
                        cssClass: 'btn-primary',
                        action: function(dialogRef) {
                          deleteClassByID(eventID)
                          dialogRef.enableButtons(false);
                          dialogRef.setClosable(false);
                          dialogRef.getModalBody().html('Dialog closes in 5 seconds.');
                          setTimeout(function() {
                            dialogRef.close();
                          }, 1000);
                        }
                      }]
                    });

                  });

              })


            },
          };

          var $fc = $('.sub-calendar').fullCalendar(calOptions);

          function recreateFC(screenWidth) {
            if (screenWidth < 500) {
              calOptions.header = {
                left: 'prev,next today',
                center: 'title',
                right: ''
              };
              calOptions.defaultView = 'listWeek';
              // calOptions.contentHeight: '600';
            } else {
              calOptions.customButtons = {
                addEventBtn: {
                  text: 'Add Event',
                  click: function() {
                    // alert('clicked the custom button!');
                    $('.add-event-btn').click();
                  }
                }
              }
              calOptions.header = {
                left: 'prev,next today addEventBtn',
                center: 'title',
                right: 'month, agendaWeek, listWeek'
              };
              calOptions.defaultView = 'month';
            }
            $fc.fullCalendar('destroy');
            $fc.fullCalendar(calOptions);
          }

          $(window).resize(function() {
            recreateFC($(window).width());
          });

          recreateFC($(window).width());
        });
      </script>
</body>

</html>
